{{- $xfcedesktop := or .xfcedesktop "false" }}
{{- $experimentalkernel := or .experimentalkernel "false" }}
{{- $localdebs := or .localdebs "none" }}

architecture: arm64

actions:
  - action: debootstrap
    description: Bootstrap initial filesystem
    # NB: not currently configurable
    suite: trixie
    components:
      - main
      # for packages of linux-firmware
      - non-free-firmware
    mirror: http://deb.debian.org/debian
    variant: minbase

  - action: run
    description: Modernize APT sources
    chroot: true
    command: |
      set -eux
      apt -y modernize-sources
      rm -v /etc/apt/sources.list.bak

  - action: apt
    description: Install foundational packages
    recommends: true
    packages:
      # Android Debug Bridge (daemon)
      - adbd
      # bluetooth
      - bluez
      # vfat tools, notably fsck.fat for the ESP
      - dosfstools
      # ext4 tools, notably e2fsck for the root filesystem
      - e2fsprogs
      # defaults to "systemd-sysv"; perhaps not needed
      - init
      # Ethernet, Wi-Fi, WWAN; built-in DHCP client
      - network-manager
      # standard networking files (/etc/hosts, /etc/services etc.)
      - netbase
      # Qualcomm's IPC Router protocol; this is a dependency of the
      # tqftpserv service, but it's actually not needed on RB1
      # TODO drop me once https://bugs.debian.org/1104039 is fixed
      - qrtr-tools
      # Qualcomm Remote Filesystem Service; needed for WiFi on
      # some ath10k devices such as on RB1
      - rmtfs
      # TFTP server implementation for the QRTR protocol; needed for WiFi on
      # some ath10k devices such as on RB1
      - tqftpserv
      # dynamic device nodes handling
      - udev
      # database of radio emission regulations; needed for WiFi
      - wireless-regdb
      # WPA / WPA2 / WPA3 client support
      - wpasupplicant

  - action: run
    description: Set hostname to "debian"
    chroot: true
    command: |
      set -eux
      echo debian >/etc/hostname
      # /etc/hosts is created by netbase
      sed -i "1s/^/127.0.1.1	debian\n/" /etc/hosts

  - action: run
    description: Add a "debian" user, add it to sudoers and various groups
    chroot: true
    command: |
      set -eux
      # pre-emptively create a sudo group if sudo isn't installed
      getent group sudo >/dev/null 2>&1 || groupadd --system sudo
      # some of these groups are only needed for desktop scenarios
      useradd --create-home --shell /bin/bash --user-group \
          --groups adm,video,users,sudo debian
      # password must be changed on first login; set it to "debian"
      chage --lastday 0 debian
      echo debian:debian | chpasswd
      # add to sudoers
      mkdir -v --mode 755 --parents /etc/sudoers.d
      # subshell to override umask
      (
        umask 226
        echo "debian ALL=(ALL) NOPASSWD:ALL" >/etc/sudoers.d/90-debos
      )
  # NB: Recommends pull in way too many packages, and we don't need to follow
  # Recommends reaching outside of this Priority level
  - action: apt
    description: Install packages of priority "important" (only from Debian)
    recommends: false
    packages:
      - ?origin(Debian) ?priority(important)

  # NB: Recommends pull in way too many packages, and we don't need to follow
  # Recommends reaching outside of this Priority level
  - action: apt
    description: Install packages of priority "standard" (only from Debian)
    recommends: false
    packages:
      - ?origin(Debian) ?priority(standard)

  # TODO remove Priority: standard packages from this list?
  - action: apt
    description: Install a comfortable package set
    recommends: true
    packages:
      - alsa-utils
      - device-tree-compiler
      - i2c-tools
      - locales
      - mesa-utils-bin
      # convenience networking commands (arp, ifconfig, route etc.)
      - net-tools
      - openssh-client
      # lspci
      - pciutils
      - rfkill
      - sudo
      # lsusb
      - usbutils
      - vim
      - wget

{{- if eq $xfcedesktop "true" }}
  # this should ideally be task-xfce-desktop, but this pulls too many apps;
  # instead, curate from the Depends and Recommends of task-xfce-desktop and
  # task-desktop recursively; also, disable Recommends
  - action: apt
    description: Install Xfce desktop
    recommends: false
    packages:
      # preempt these dependencies as to avoid pulling all backends
      - xserver-xorg-input-libinput
      - xserver-xorg-video-fbdev
      - xserver-xorg-input-all-
      - xserver-xorg-video-all-
      - xserver-xorg
      - plymouth-label- # we probably don't need a boot splash
      # from task-xfce-desktop
      - xfce4
      - lightdm
      - light-locker
      - xfce4-terminal
      - tango-icon-theme
      - network-manager-applet
      - nm-connection-editor
      - synaptic
      # from task-desktop
      - desktop-base
      - xdg-utils
      - fonts-symbola
      - avahi-daemon
      - libnss-mdns
      - firefox-esr
{{- end }}

  - action: run
    description: Set default locale
    chroot: true
    command: |
      set -eux
      if which locale-gen >/dev/null 2>&1; then
          echo en_US.UTF-8 UTF-8 >>/etc/locale.gen
          locale-gen en_US.UTF-8 UTF-8
          update-locale LANG=en_US.UTF-8
      fi

  - action: apt
    description: Install kernel and firmware packages
    recommends: true
    packages:
      - firmware-atheros
      - firmware-qcom-soc
      - linux-image-arm64

  # XXX this is a workaround until firmware-non-free migrates to testing; it
  # might make sense to have a generic mechanism to do this
  - action: run
    description: Install firmware packages from unstable
    chroot: true
    command: |
      set -eux
      # add sid APT sources
      cat >/etc/apt/sources.list.d/debian-sid.sources <<EOF
      Types: deb
      URIs: http://deb.debian.org/debian/
      Suites: sid
      Components: main non-free-firmware
      Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg
      EOF
      # update and install kernel from experimental
      apt update
      apt -y install -t unstable firmware-atheros firmware-qcom-soc
      # remove sid APT sources and update again
      rm -f /etc/apt/sources.list.d/debian-sid.sources
      apt update

{{- if eq $experimentalkernel "true" }}
  # this is an optional temporary option to install the kernel from
  # experimental until trixie/sid have a recent enough kernel, or some overlay
  # archive is provided; note that the original linux-image-arm64 is kept
  - action: run
    description: Install Linux kernel from experimental
    chroot: true
    command: |
      set -eux
      # add experimental APT sources
      cat >/etc/apt/sources.list.d/debian-experimental.sources <<EOF
      Types: deb
      URIs: http://deb.debian.org/debian/
      Suites: experimental
      Components: main non-free-firmware
      Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg
      EOF
      # update and install kernel from experimental
      apt update
      apt -y install -t experimental linux-image-arm64
      # disable experimental from APT sources
      sed -i "1s/^/Enabled: no\n/" \
          /etc/apt/sources.list.d/debian-experimental.sources
{{- end }}

  # this is currently needed on boards such as RB1 which are using Android
  # bootloader to check the boot count of the boot_a/boot_b partitions
  - action: apt
    description: Support boards chainloading from Android bootloader
    recommends: true
    packages:
      # marks the current Android boot partition as booted successfully
      - qbootctl

{{- if ne $localdebs "none" }}
  - action: overlay
    description: Overlay local debs directory {{ $localdebs }} to /root/
    source: {{ $localdebs }}
    destination: /root/

  - action: run
    description: Install local debs from /root/
    chroot: yes
    command: |
      set -eux
      apt -y install /root/*.deb
{{- end }}

  - action: run
    description: Create DTBs tarball
    chroot: false
    command: |
      set -eux
      # find the highest kernel version installed; kernels are backwards
      # compatible with older dtbs, so it would make sense to take dtbs from
      # the oldest available kernel as to allow all kernels to boot, but if
      # this image has pulled a more recent kernel, it's probably to gain
      # support for new hardware which would happen through new or updated dtbs
      # only in that new kernel, so use the latest dtbs
      latest_kernel="$(
          ls -d "$ROOTDIR"/usr/lib/linux-image-* | sort -V | tail -1)"
      tar -C "${latest_kernel}" -cvzf "$ARTIFACTDIR/dtbs.tar.gz" \
          qcom/qcs6490-rb3gen2.dtb \
          qcom/qrb2210-rb1.dtb

  - action: pack
    description: Create root filesystem tarball
    file: rootfs.tar.gz
    compression: gz

# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause
